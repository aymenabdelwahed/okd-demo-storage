kind: Template
apiVersion: v1
metadata:
  name: startx-demo-storage-volatile-template
  annotations:
    openshift.io/display-name: Startx Http Server (volatile deploy workflow)
    description: Deployement workflow of a static web application using volatile storage
      for logs records. Use apache with various underlying linux distribution. See 
      https://hub.docker.com/r/startx/sv-apache
    iconClass: icon-apache
    tags: startx,os,fedora,apache,httpd
    openshift.io/provider-display-name: STARTX
    openshift.io/documentation-url: https://hub.docker.com/r/startx/sv-apache
    openshift.io/support-url: https://github.com/startxfr/docker-images/issues/new
message: |-
  Your application ${APP_NAME} will be soon deployed in project ${APP_NAMESPACE}.
  Monitor the deployement for application availability and
  Follow created route to browse running application

  Project     : ${APP_NAMESPACE}
  Application : ${APP_NAME}
  Stage       : ${APP_STAGE}
  Kind        : volatile
labels:
  template: startx-demo-storage-volatile-template
  provider: startx 
objects:
- kind: ImageStream
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    namespace: "${APP_NAMESPACE}"
    annotations:
      openshift.io/display-name: Application image stream ${APP_NAME} ${APP_STAGE}
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
      project: "${APP_NAMESPACE}"
  spec:
    tags:
    - name: ${APP_STAGE}
      annotations:
        openshift.io/display-name: Application container image (${APP_NAME} ${APP_STAGE})
        description: ${APP_STAGE} image for the application ${APP_NAME} based on ${BUILDER_TAG}
        iconClass: icon-apache
        tags: startx,fedora,apache,httpd,application,${APP_NAME},${APP_STAGE},${BUILDER_TAG}
        supports: http
        version: ${APP_STAGE}
      from:
        kind: DockerImage
        name: startx/sv-apache:${BUILDER_TAG}
- kind: ConfigMap
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-config"
    namespace: "${APP_NAMESPACE}"
    annotations:
      openshift.io/display-name: Configuration for ${APP_NAME} ${APP_STAGE} application
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
      project: "${APP_NAMESPACE}"
  data:
    SX_ID: ${APP_NAME}/${APP_STAGE}
    SX_TYPE: ${APP_STAGE}
    SX_SERVICE: ${APP_NAME}
    SX_NAME: Static web application ${APP_NAME}
    SX_SUMMARY: Static web application ${APP_NAME} based on apache container
    SX_VERSION: 0.0.1 
- kind: PersistentVolumeClaim
  apiVersion: v1
  metadata:
    name: "${APP_NAME}-log"
    namespace: "${APP_NAMESPACE}"
    annotations:
      openshift.io/display-name: Persistent volume claim for ${APP_NAME} ${APP_STAGE} application
      openshift.io/generated-by: STARTX
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
      project: "${APP_NAMESPACE}"
  spec:
    accessModes:
      - ReadWriteOnce 
    selector:
      matchLabels:
        project: "${APP_NAMESPACE}"
        kind: "volatile"
    resources:
      requests:
        storage: 128Mi
- kind: DeploymentConfig
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    namespace: "${APP_NAMESPACE}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
      project: "${APP_NAMESPACE}"
    annotations:
      openshift.io/display-name: Deployement ${APP_NAME} ${APP_STAGE} application
      openshift.io/generated-by: STARTX
  spec:
    replicas: 1
    strategy:
      type: Rolling
      rollingParams:
        updatePeriodSeconds: 1
        intervalSeconds: 1
        timeoutSeconds: 30
        maxUnavailable: 25%
        maxSurge: 25%
    triggers:
    - type: ImageChange
      imageChangeParams:
        automatic: true
        containerNames:
        - "${APP_NAME}"
        from:
          kind: ImageStreamTag
          name: "${APP_NAME}:${APP_STAGE}"
    - type: ConfigChange
    postCommit:
      script: "/bin/sx-apache info"
    test: false
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    template:
      metadata:
        labels:
          app: "${APP_NAME}"
          stage: "${APP_STAGE}"
          project: "${APP_NAMESPACE}"
          deploymentconfig: "${APP_NAME}"
        annotations:
          openshift.io/generated-by: STARTX
      spec:
        containers:
        - name: "${APP_NAME}"
          image: " "
          env:
          - name: SX_VERBOSE
            value: 'true'
          envFrom:
            - configMapRef:
                name: ${APP_NAME}-config
          command:
          - "/bin/sx-apache"
          args:
          - run
          ports:
          - containerPort: 8080
            protocol: TCP
          livenessProbe:
            exec:
              command:
              - "/bin/sx-apache"
              - isLive
            initialDelaySeconds: 2
            timeoutSeconds: 1
            periodSeconds: 8
            successThreshold: 1
            failureThreshold: 2
          readinessProbe:
            exec:
              command:
              - "/bin/sx-apache"
              - isReady
            initialDelaySeconds: 2
            timeoutSeconds: 1
            periodSeconds: 8
            successThreshold: 1
            failureThreshold: 2
          resources:
            limits:
              cpu: 2000m
              memory: 256Mi
            requests:
              cpu: 200m
              memory: 128Mi
          terminationMessagePath: "/dev/termination-log"
          imagePullPolicy: Always
          volumeMounts:
          - name: "${APP_NAME}-log"
            mountPath: "/var/log/httpd"
        volumes:
        - name: "${APP_NAME}-log"
          persistentVolumeClaim:
            claimName: "${APP_NAME}-log"
        restartPolicy: Always
        terminationGracePeriodSeconds: 30
        securityContext: {}
        dnsPolicy: ClusterFirst
- kind: Service
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    namespace: "${APP_NAMESPACE}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
      project: "${APP_NAMESPACE}"
    annotations:
      openshift.io/display-name: Service for ${APP_NAME} ${APP_STAGE} application
      openshift.io/generated-by: STARTX
  spec:
    ports:
    - protocol: TCP
      port: 8080
      targetPort: 8080
    selector:
      app: "${APP_NAME}"
      deploymentconfig: "${APP_NAME}"
    type: ClusterIP
    sessionAffinity: None
- kind: Route
  apiVersion: v1
  metadata:
    name: "${APP_NAME}"
    namespace: "${APP_NAMESPACE}"
    labels:
      app: "${APP_NAME}"
      stage: "${APP_STAGE}"
      project: "${APP_NAMESPACE}"
    annotations:
      openshift.io/display-name: Route for ${APP_NAME} ${APP_STAGE} application
      openshift.io/generated-by: STARTX
  spec:
    to:
      kind: Service
      name: "${APP_NAME}"
      weight: 100
parameters:
- name: APP_NAMESPACE
  displayName: Project
  description: Project name where application is deployed
  value: demo-storage
  required: true
- name: APP_NAME
  displayName: Application name
  description: The name of the created application
  value: volatile
  required: true
- name: APP_STAGE
  displayName: Application stage
  description: "Stage of the application deployed (ex: dev, test, prod, example, demo, poc, ...)"
  value: demo
  required: true
- name: BUILDER_TAG
  displayName: Startx image release
  description: "Image tag of the startx apache image used. Could be : latest, fc30, fc29, fc28, alpine3, centos7, centos6"
  value: latest
  required: true
